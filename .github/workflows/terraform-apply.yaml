name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to destroy (dev or prod)'
        required: true
      app_version:
        description: 'Application version to deploy'
        required: true

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Set env vars and run script
        run: |
          if [[ "${{ github.event.inputs.env }}" == "dev" ]]; then
            echo "${{ secrets['TF_DEV_SET_ENV_VARS_SCRIPT'] }}" > set_env.sh
          else
            echo "${{ secrets['TF_PROD_SET_ENV_VARS_SCRIPT'] }}" > set_env.sh
          fi
          chmod +x set_env.sh
          . ./set_env.sh
          echo "TF_VAR_application_version=${{ github.event.inputs.app_version }}" >> $GITHUB_ENV
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-3
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/${{ github.event.inputs.env }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform/${{ github.event.inputs.env }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/${{ github.event.inputs.env }}
